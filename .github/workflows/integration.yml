name: CI

env:
  ARTIFACT_NAME: webservice-${{ github.sha }}

on:
  push:
jobs:
#  build:
#    name: Service Unit tests
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 8
#        uses: actions/setup-java@v2
#        with:
#          java-version: '8'
#          distribution: 'adopt'
#      - name: Run Tests
#        run: mvn --batch-mode --update-snapshots test
  ami_build:
#    needs: build
    runs-on: ubuntu-latest
    name: Packer AMI setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Zip files
        run: zip -r webservice.zip ./
      - name: Show contents of folder
        run: echo $(ls)
#      - name: Action - Checkout
#        uses: actions/checkout@v2
      - name: Packer Init 1
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: amisetup.pkr.hcl
      - name: Validate Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: -var-file=amisetup.auto.pkrvars.hcl
          target: amisetup.pkr.hcl
      - name: Packer Init 2
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: amisetup.pkr.hcl
      - name: Run Buildscript
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: -var=AWS_ACCESSKEY=${{ secrets.AWS_ACCESS_KEY_ID }} -var=AWS_SECTRET_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} -var-file=amisetup.auto.pkrvars.hcl -on-error=abort
          target: amisetup.pkr.hcl
        env:
          PACKER_LOG: 1

  code_deploy:
    runs-on: ubuntu-latest
    name: Run CodeDeploy
    steps:
      - name: Step 1 - Checkout code
        uses: actions/checkout@v2

      - name: Step 2 - Install AWS Cli
        run: sudo pip install awscli

      - name: Step 3 - Set correct aws environment
        run: |
          aws configure set region us-east-1
          aws configure set aws_access_key_id ${{ secrets.GHUSER_ACCESS_KEY }}
          aws configure set aws_secret_access_key ${{ secrets.GHUSER_SECRET_KEY }}

      - name: Step 4 - Upload Artifact/zip files to s3 bucket
        run: |
          aws deploy push --application-name csye6225-webapp --s3-location s3://${{ secrets.AWS_BUCKET_NAME }}/${{ env.ARTIFACT_NAME }}.zip

      - name: Step 5 - Create Deployment
        run: |
          aws deploy create-deployment \
          --application-name csye6225-webapp \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name csye6225-webapp-deployment \
          --s3-location bucket=${{ secrets.AWS_BUCKET_NAME }},key=${{ env.ARTIFACT_NAME }}.zip,bundleType=zip
